{"version":3,"sources":["../../../src/handlers/digital-ocean/digital-ocean.handler.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/unbound-method */\n//#region Imports\n\nimport type { BinarySettings } from '../../@types';\nimport type { DigitalOceanHttpEvent } from '../../@types/digital-ocean';\nimport type {\n  AdapterContract,\n  FrameworkContract,\n  ResolverContract,\n  ServerlessHandler,\n} from '../../contracts';\nimport type { ILogger } from '../../core';\nimport { DefaultHandler } from '../default';\n\n//#endregion\n\n/**\n * The class that implements a serverless handler for Digital Ocean Functions.\n *\n * @breadcrumb Handlers / DigitalOceanHandler\n * @public\n */\nexport class DigitalOceanHandler<\n  TApp,\n  TEvent,\n  TResponse,\n  TReturn,\n> extends DefaultHandler<TApp, TEvent, void, void, TResponse, TReturn> {\n  /**\n   * {@inheritDoc}\n   */\n  public override getHandler(\n    app: TApp,\n    framework: FrameworkContract<TApp>,\n    adapters: AdapterContract<TEvent, void, TResponse>[],\n    resolverFactory: ResolverContract<TEvent, void, void, TResponse, TReturn>,\n    binarySettings: BinarySettings,\n    respondWithErrors: boolean,\n    log: ILogger,\n  ): ServerlessHandler<TReturn> {\n    const defaultHandler = super.getHandler(\n      app,\n      framework,\n      adapters,\n      resolverFactory,\n      binarySettings,\n      respondWithErrors,\n      log,\n    );\n\n    return (event: DigitalOceanHttpEvent) =>\n      defaultHandler(event, undefined, undefined);\n  }\n}\n"],"mappings":"2HAsBO,IAAMA,EAAN,cAKGC,CAA6D,CA3BvE,MA2BuE,CAAAC,EAAA,4BAIrD,WACdC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAC4B,CAC5B,IAAMC,EAAiB,MAAM,WAC3BP,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,CACF,EAEA,OAAQE,GACND,EAAeC,EAAO,OAAW,MAAS,CAC9C,CACF","names":["DigitalOceanHandler","DefaultHandler","__name","app","framework","adapters","resolverFactory","binarySettings","respondWithErrors","log","defaultHandler","event"]}