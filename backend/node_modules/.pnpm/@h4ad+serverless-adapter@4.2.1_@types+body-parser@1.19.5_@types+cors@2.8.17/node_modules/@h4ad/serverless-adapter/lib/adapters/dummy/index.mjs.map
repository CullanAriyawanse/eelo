{"version":3,"sources":["../../../src/adapters/dummy/dummy.adapter.ts"],"sourcesContent":["//#region Imports\n\nimport type {\n  AdapterContract,\n  AdapterRequest,\n  OnErrorProps,\n} from '../../contracts';\nimport { EmptyResponse, type IEmptyResponse } from '../../core';\n\n//#endregion\n\n/**\n * The class that represents a dummy adapter that does nothing and can be used by the cloud that doesn't use adapters.\n *\n * @breadcrumb Adapters / DummyAdapter\n * @public\n */\nexport class DummyAdapter implements AdapterContract<any, any, void> {\n  /**\n   * {@inheritDoc}\n   */\n  public canHandle(): boolean {\n    return true;\n  }\n\n  /**\n   * {@inheritDoc}\n   */\n  public getAdapterName(): string {\n    return DummyAdapter.name;\n  }\n\n  /**\n   * {@inheritDoc}\n   */\n  public getRequest(): AdapterRequest {\n    return {\n      method: 'POST',\n      body: void 0,\n      path: '/dummy',\n      headers: {},\n    };\n  }\n\n  /**\n   * {@inheritDoc}\n   */\n  public getResponse(): IEmptyResponse {\n    return EmptyResponse;\n  }\n\n  /**\n   * {@inheritDoc}\n   */\n  public onErrorWhileForwarding(props: OnErrorProps<any, void>): void {\n    props.delegatedResolver.succeed();\n  }\n}\n"],"mappings":"0FAiBO,IAAMA,EAAN,MAAMC,CAAwD,CAjBrE,MAiBqE,CAAAC,EAAA,qBAI5D,WAAqB,CAC1B,MAAO,EACT,CAKO,gBAAyB,CAC9B,OAAOD,EAAa,IACtB,CAKO,YAA6B,CAClC,MAAO,CACL,OAAQ,OACR,KAAM,OACN,KAAM,SACN,QAAS,CAAC,CACZ,CACF,CAKO,aAA8B,CACnC,OAAOE,CACT,CAKO,uBAAuBC,EAAsC,CAClEA,EAAM,kBAAkB,QAAQ,CAClC,CACF","names":["DummyAdapter","_DummyAdapter","__name","EmptyResponse","props"]}