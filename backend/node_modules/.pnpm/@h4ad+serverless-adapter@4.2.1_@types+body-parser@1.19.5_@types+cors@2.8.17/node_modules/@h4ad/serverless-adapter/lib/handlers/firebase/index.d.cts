import { HttpsFunction } from 'firebase-functions/v1';
import { F as FrameworkContract } from '../../framework.contract-YnJ-fl1w.cjs';
import { H as HandlerContract } from '../../handler.contract-TQk8iM8f.cjs';
import { R as RawRequest } from '../../raw-request-B2vPjAfE.cjs';
import { IncomingMessage, ServerResponse } from 'node:http';
import { https } from 'firebase-functions/v2';
import 'http';
import '../../adapter.contract-y5xSjOjo.cjs';
import '../../headers-K2qbcurv.cjs';
import '../../logger-9me5n48P.cjs';
import '../../request-DNNIV9ub.cjs';

/**
 * The class that implements a handler for Firebase Https Events
 *
 * @remarks Read more about Https Events {@link https://firebase.google.com/docs/functions/http-events | here}
 *
 * @breadcrumb Handlers / HttpFirebaseHandler
 * @public
 */
declare class HttpFirebaseHandler<TApp> extends RawRequest<TApp> implements HandlerContract<TApp, never, never, never, void, void | Promise<void>> {
    /**
     * {@inheritDoc}
     */
    getHandler(app: TApp, framework: FrameworkContract<TApp>): HttpsFunction;
}

/**
 * The HTTP handler that is exposed when you use {@link HttpFirebaseV2Handler}.
 *
 * @breadcrumb Handlers / HttpFirebaseHandler
 * @public
 */
type FirebaseHttpHandler = (request: IncomingMessage, response: ServerResponse) => void | Promise<void>;
/**
 * The class that implements a handler for Firebase Https Events
 *
 * @remarks Read more about Https Events {@link https://firebase.google.com/docs/functions/http-events | here}
 *
 * @breadcrumb Handlers / HttpFirebaseHandler
 * @public
 */
declare class HttpFirebaseV2Handler<TApp> extends RawRequest<TApp> implements HandlerContract<TApp, never, never, never, void, void | Promise<void>> {
    protected readonly options?: https.HttpsOptions | undefined;
    /**
     * Construtor padr√£o
     */
    constructor(options?: https.HttpsOptions | undefined);
    /**
     * {@inheritDoc}
     */
    getHandler(app: TApp, framework: FrameworkContract<TApp>): FirebaseHttpHandler;
    /**
     * Wrapper method around onRequest for better testability
     */
    protected onRequestWithOptions(options: https.HttpsOptions, callback: ReturnType<HttpFirebaseV2Handler<TApp>['onRequestCallback']>): FirebaseHttpHandler;
}

export { type FirebaseHttpHandler, HttpFirebaseHandler, HttpFirebaseV2Handler };
