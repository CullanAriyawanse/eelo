import{h as a,s as i}from"../../chunk-MQYXRLYI.mjs";import{a as s}from"../../chunk-OYOJMOFP.mjs";import{nodeHTTPRequestHandler as C}from"@trpc/server/adapters/node-http";var p=class{static{s(this,"BufferToJSObjectTransformer")}deserialize(e){return e instanceof Buffer?JSON.parse(e.toString("utf-8")):e}serialize(e){return e}},d=class{constructor(e){this.options=e}static{s(this,"TrpcFramework")}sendRequest(e,t,r){let n=this.getSafeUrlForTrpc(t);C({req:t,res:r,path:n,router:e,...this.options,createContext:o=>this.mergeDefaultContextWithOptionsContext(o)})}getSafeUrlForTrpc(e){let t=e.url;return t.startsWith("/")&&(t=t.slice(1)),t.includes("?")&&(t=t.split("?")[0]),t}mergeDefaultContextWithOptionsContext(e){let r=i(this.options?.createContext,()=>{})(e);return r&&r.then?r.then(n=>this.wrapResolvedContextWithDefaultContext(n,e)):this.wrapResolvedContextWithDefaultContext(r,e)}wrapResolvedContextWithDefaultContext(e,t){let r=t.req,n=t.res;return{...e,request:r,response:n,getUrl:()=>r.url,getMethod:()=>r.method,getHeaders:()=>a(r.headers,",",!0),setHeader:(o,m)=>{n.setHeader(o,m)},removeHeader:o=>{n.removeHeader(o)},getHeader:o=>a(r.headers,",",!0)[o.toLowerCase()],setStatus:o=>{n.statusCode=o,n.statusMessage=void 0},getIp:()=>r.connection.remoteAddress}}};export{p as BufferToJSObjectTransformer,d as TrpcFramework};
//# sourceMappingURL=index.mjs.map